import {
    APP_SETTING as DB_APP_SETTING,
    MASTER_DATA as DB_MASTER_DATA,
    CASE_STATUS as DB_CASE_STATUS,
    ENGINEER_WORKING_STATUS as DB_ENGINEER_WORKING_STATUS,
    QUERY_TYPES_ID as DB_QUERY_TYPES_ID,
    TAGS_TYPES_ID as DB_TAGS_TYPES_ID,
    TAGS_TYPES_CODE as DB_TAGS_TYPES_CODE,
    CASE_IMPACT_TYPE_ID as DB_CASE_IMPACT_TYPE_ID
} from './db.constants';

export enum APP_SETTING {
    DATE_FORMAT = DB_APP_SETTING.DATE_FORMAT,
    DATE_TIME_FORMAT = DB_APP_SETTING.DATE_TIME_FORMAT,
    USE_GLOBAL_DATE_TIME_FORMAT = DB_APP_SETTING.USE_GLOBAL_DATE_TIME_FORMAT,
    RESEND_OTP_TIME_SEC = DB_APP_SETTING.RESEND_OTP_TIME_SEC,
    USE_SAML = DB_APP_SETTING.USE_SAML,
    MAX_USER_ADD_COUNT = DB_APP_SETTING.MAX_USER_ADD_COUNT
}

export enum MASTER_DATA {
    FUEL_TYPE = DB_MASTER_DATA.FUEL_TYPE,
    VEHICLE_CATEGORY = DB_MASTER_DATA.VEHICLE_ENGINE_CATEGORY,
    EMISSION_NORMS = DB_MASTER_DATA.EMISSION_NORMS,
    NATURE_OF_BUSINESS = DB_MASTER_DATA.NATURE_OF_BUSINESS,
    ORGANIZATION_TYPE = DB_MASTER_DATA.ORGANIZATION_TYPE,
    STATE = DB_MASTER_DATA.STATE,
    ACCOUNT_TYPE = DB_MASTER_DATA.ACCOUNT_TYPE,
    DOCUMENT_SUBMISSION_TYPE = DB_MASTER_DATA.DOCUMENT_SUBMISSION_TYPE,
    REPORT_CERTIFICATES = DB_MASTER_DATA.REPORT_CERTIFICATES,
    OTHER_CERTIFICATES = DB_MASTER_DATA.OTHER_CERTIFICATES,
    CMVR_CERTIFICATES = DB_MASTER_DATA.CMVR_CERTIFICATES,
    TYPE_OF_CERTIFICATE = DB_MASTER_DATA.TYPE_OF_CERTIFICATE,
    CASE_DOCUMENT = DB_MASTER_DATA.CASE_DOCUMENT,
    USER_ROLES = DB_MASTER_DATA.USER_ROLES,
    COMPANY_USER_ROLES = DB_MASTER_DATA.COMPANY_USER_ROLES,
    COMPONENT_TYPES = DB_MASTER_DATA.COMPONENT_TYPES,
    CASE_STATUS = DB_MASTER_DATA.CASE_STATUS,
    CUSTOMER_STATUS = DB_MASTER_DATA.CUSTOMER_STATUS,
    DOCUMENT_TYPE = DB_MASTER_DATA.DOCUMENT_TYPE,
    CASE_DEPARTMENT_STATUS = DB_MASTER_DATA.CASE_DEPARTMENT_STATUS,
    CASE_TYPE = DB_MASTER_DATA.CASE_TYPE,
    CASE_PRIORITY = DB_MASTER_DATA.CASE_PRIORITY,
    CASE_REM_ACCESS_SPECIFIER = DB_MASTER_DATA.CASE_REM_ACCESS_SPECIFIER,
    CASE_REMARK_ACTIONS = DB_MASTER_DATA.CASE_REMARK_ACTIONS,
    ARAI_DEPARTMENTS = DB_MASTER_DATA.ARAI_DEPARTMENTS,
    PARTY_STATUS = DB_MASTER_DATA.PARTY_STATUS,
    CASE_DOCUMENT_TYPE = DB_MASTER_DATA.CASE_DOCUMENT_TYPE,
    TAGGING_TYPE = DB_MASTER_DATA.CASE_QUERY_TAGS,
    CLEARANCE_NOTE_STATUS = DB_MASTER_DATA.CLEARANCE_NOTE_STATUS,
    CLEARANCE_MODE = DB_MASTER_DATA.CLEARANCE_MODE,
    CL_NOTE_TEST_RPT_UPLOADED = DB_MASTER_DATA.CL_NOTE_TEST_RPT_UPLOADED,
    CL_NOTE_FINACE_CLEARED = DB_MASTER_DATA.CL_NOTE_FINACE_CLEARED,
    DISPATCH_TRANSPORT_TYPE = DB_MASTER_DATA.DISPATCH_TRANSPORT_TYPE,
    CASE_IMPACT_TYPE = DB_MASTER_DATA.CASE_IMPACT_TYPE,
    CASE_QUERY_TYPE = DB_MASTER_DATA.CASE_QUERY_TYPE
}

export enum LOCAL_MASTER_DATA {

    //Local Data
    FILTER_OPERATORS = 'FILTER_OPERATORS'
}

export enum OPERATORS {

    GRATER_THAN = '>',
    LESS_THAN_EQUAL_TO = '<=',
    GREATER_THAN_EQUAL_TO = '>=',
    EQUAL_TO = '=',
    NOT_EQUAL_TO = '!=',
    BETWEEN = 'between',
}


export enum CASE_STATUS {
    DRAFT_CS = DB_CASE_STATUS.DRAFT_CS,
    IN_PROGRSS = DB_CASE_STATUS.IN_PROGRSS,
    REJECTED = DB_CASE_STATUS.REJECTED,
    CASE_APPROVED = DB_CASE_STATUS.CASE_APPROVED,
    SUBMITTED = DB_CASE_STATUS.SUBMITTED,
    REVIEW = DB_CASE_STATUS.REVIEW,
    ASSIGNED = DB_CASE_STATUS.ASSIGNED,
    CERTIFIED = DB_CASE_STATUS.CERTIFIED,
    COMPLETED = DB_CASE_STATUS.COMPLETED,
    ALLOCATED = DB_CASE_STATUS.ALLOCATED,
    ALLOTED_TO_ENGINEER = DB_CASE_STATUS.ALLOTED_TO_ENGINEER,
    FORWARDED_FOR_CERTIFICATE = DB_CASE_STATUS.FORWARDED_FOR_CERTIFICATE,
    CUSTOMER_CANCEL = DB_CASE_STATUS.CUSTOMER_CANCEL,
    UNDER_SHORT_CLOSE = DB_CASE_STATUS.UNDER_SHORT_CLOSE,
    SHORT_CLOSED = DB_CASE_STATUS.SHORT_CLOSED,
    PARTIAL_CLOSE = DB_CASE_STATUS.PARTIAL_CLOSE,
    SHOR_CLOSE_VERIFICATION = DB_CASE_STATUS.SHOR_CLOSE_VERIFICATION,
    ON_GOING = DB_CASE_STATUS.ON_GOING,
    FINAL_SCRUTINY = DB_CASE_STATUS.FINAL_SCRUTINY,
    UNDER_CERTIFICATION = DB_CASE_STATUS.UNDER_CERTIFICATION
}
export enum ENGINEER_WORKING_STATUS {
    SCR_START = DB_ENGINEER_WORKING_STATUS.SCR_START,
    SCR_STOP = DB_ENGINEER_WORKING_STATUS.SCR_STOP,
    SCR_COMPLETED = DB_ENGINEER_WORKING_STATUS.SCR_COMPLETED
}


export enum QUERY_TYPES_ID {
    CQT_GENERIC = DB_QUERY_TYPES_ID.CQT_GENERIC,
    CQT_DOCUMENTS = DB_QUERY_TYPES_ID.CQT_DOCUMENTS
}

export enum TAGS_TYPES_ID {
    OTHER_TAG = DB_TAGS_TYPES_ID.OTHER_TAG
}

export enum TAGS_TYPES_CODE {
    OTHER_TAG = DB_TAGS_TYPES_CODE.OTHER_TAG
}


export enum CASE_IMPACT_TYPE_ID {
    NO_IMPACT = DB_CASE_IMPACT_TYPE_ID.NO_IMPACT,
    TEST_DELAY = DB_CASE_IMPACT_TYPE_ID.TEST_DELAY,
    TEST_ON_HOLD = DB_CASE_IMPACT_TYPE_ID.TEST_ON_HOLD,
    CLEARANCE_ON_HOLD = DB_CASE_IMPACT_TYPE_ID.CLEARANCE_ON_HOLD
}


export enum CONTROL_TYPE {
   TEXTBOX = "textbox",
   OPERATOR = "operator",
   DATE = "date"
}